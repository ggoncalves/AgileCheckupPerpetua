package com.agilecheckup.persistency.entity;

import com.agilecheckup.persistency.entity.base.BaseEntity;
import com.agilecheckup.persistency.entity.person.NaturalPerson;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConvertedEnum;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConvertedJson;
import lombok.*;
import lombok.experimental.SuperBuilder;
import org.apache.commons.lang3.StringUtils;

import java.util.Date;
import java.util.Optional;

@EqualsAndHashCode(callSuper = true)
@ToString(callSuper = true)
@Data
@NoArgsConstructor
@AllArgsConstructor
@SuperBuilder
@DynamoDBTable(tableName = "EmployeeAssessment")
public class EmployeeAssessment extends BaseEntity {

  @NonNull
  @DynamoDBAttribute(attributeName = "tenantId")
  @DynamoDBIndexHashKey(globalSecondaryIndexName = "tenantId-index")
  private String tenantId;

  @NonNull
  @DynamoDBAttribute(attributeName = "assessmentMatrixId")
  @DynamoDBIndexHashKey(globalSecondaryIndexName = "assessmentMatrixId-employeeEmail-index")
  private String assessmentMatrixId;

  @NonNull
  @DynamoDBAttribute(attributeName = "employee")
  @DynamoDBTypeConvertedJson
  private NaturalPerson employee;

  @DynamoDBAttribute(attributeName = "teamId")
  private String teamId;

  @DynamoDBAttribute(attributeName = "employeeAssessmentScore")
  private EmployeeAssessmentScore employeeAssessmentScore;

  @DynamoDBAttribute(attributeName = "assessmentStatus")
  @DynamoDBTypeConvertedEnum
  @Builder.Default
  private AssessmentStatus assessmentStatus = AssessmentStatus.INVITED;

  @DynamoDBAttribute(attributeName = "answeredQuestionCount")
  private Integer answeredQuestionCount;

  @DynamoDBAttribute(attributeName = "employeeEmailNormalized")
  @DynamoDBIndexRangeKey(globalSecondaryIndexName = "assessmentMatrixId-employeeEmail-index")
  private String employeeEmailNormalized;

  @DynamoDBAttribute(attributeName = "lastActivityDate")
  private Date lastActivityDate;

  {
    answeredQuestionCount = 0;
  }
  
  /**
   * Sets the employee and automatically updates the normalized email for GSI
   */
  public void setEmployee(NaturalPerson employee) {
    this.employee = employee;
    this.employeeEmailNormalized = Optional.ofNullable(employee)
        .map(NaturalPerson::getEmail)
        .filter(StringUtils::isNotBlank)
        .map(email -> email.toLowerCase().trim())
        .orElse(null);
  }
}